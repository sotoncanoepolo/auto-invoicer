## Not too difficult to do
To avoid having to set up remote linkage etc for powershell, can use an online powershell window
https://learn.microsoft.com/en-us/azure/healthcare-apis/get-access-token?tabs=azure-powershell#code-try-0
#### - WHERE YOU CAN COMMAND LINE SHELL INTERFACE WITH AZURE

Please log in with the tennant you wish to create the app in
multitennant apps don't work well for certain tennant configs, so for simplicity just create in production tennant.

# If you need to log in:
az login
az account show --output table


# To set up the app registration (the app name is visible to end user)

$appName="Your App Name"
$redirectUri="http://localhost"

az ad app create   --display-name $appName   --available-to-other-tenants false   --reply-urls $redirectUri

# Alternative creation method: {
az rest -m post -u https://graph.microsoft.com/v1.0/applications  --headers 'Content-Type=application/json' --body '{"displayName": "xxx"}'       
# note app id and define as variavel for future use:
$appId = "{appId}"                 
az ad app update \
  --id $appId \
  --set publicClient.redirectUris='["http://localhost"]'
# }

# note app id and define as variavel for future use:
$appId = "{appId}"

az ad app update --id $appId --set isFallbackPublicClient=true
# Add delegated Microsoft Graph permissions using GUIDs
az ad app permission add `
  --id $appId `
  --api 00000003-0000-0000-c000-000000000000 `
  --api-permissions `
    e383f46e-2787-4529-855e-0e479a3ffac0=Scope `
    a9a21029-fb8e-4d4a-a3f1-ecb8a9b66c2d=Scope `
    b340eb25-3456-403f-be2f-af7a0d370277=Scope

az ad app permission grant `
  --id d44ca882-8046-4e79-bf6c-17e2f17bf1ce `
  --api 00000003-0000-0000-c000-000000000000

